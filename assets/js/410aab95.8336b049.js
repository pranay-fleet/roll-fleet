"use strict";(globalThis.webpackChunkdocs_roll=globalThis.webpackChunkdocs_roll||[]).push([[6096],{5680:(e,n,r)=>{r.d(n,{xA:()=>c,yg:()=>m});var t=r(6540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach(function(n){a(e,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))})}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),d=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef(function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(r),g=a,m=p["".concat(s,".").concat(g)]||p[g]||u[g]||i;return r?t.createElement(m,o(o({ref:n},c),{},{components:r})):t.createElement(m,o({ref:n},c))});function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},7292:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=r(8168),a=(r(6540),r(5680));const i={},o="Frequently Asked Questions (Q&A)",l={unversionedId:"English/QuickStart/qa_issues",id:"English/QuickStart/qa_issues",title:"Frequently Asked Questions (Q&A)",description:"This document compiles common issues that may be encountered when using the ROLL framework and their solutions.",source:"@site/docs/English/QuickStart/qa_issues.md",sourceDirName:"English/QuickStart",slug:"/English/QuickStart/qa_issues",permalink:"/ROLL/docs/English/QuickStart/qa_issues",draft:!1,editUrl:"https://github.com/alibaba/ROLL/tree/main/docs_roll/docs/English/QuickStart/qa_issues.md",tags:[],version:"current",lastUpdatedAt:1761384892,formattedLastUpdatedAt:"Oct 25, 2025",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Quick Start: Multi-Node Deployment Guide",permalink:"/ROLL/docs/English/QuickStart/multi_nodes_quick_start"},next:{title:"Quick Start: Single-Node Deployment Guide",permalink:"/ROLL/docs/English/QuickStart/single_node_quick_start"}},s={},d=[{value:"Model Conversion Related",id:"model-conversion-related",level:2},{value:"How to convert Megatron models to HF format?",id:"how-to-convert-megatron-models-to-hf-format",level:3},{value:"Resource Configuration Related",id:"resource-configuration-related",level:2},{value:"What is colocate mode?",id:"what-is-colocate-mode",level:3},{value:"What is separate mode?",id:"what-is-separate-mode",level:3},{value:"Training Parameters Related",id:"training-parameters-related",level:2},{value:"What do <code>rollout_batch_size</code> and <code>num_return_sequences_in_group</code> mean?",id:"what-do-rollout_batch_size-and-num_return_sequences_in_group-mean",level:3},{value:"How to set <code>gradient_accumulation_steps</code> and <code>per_device_train_batch_size</code>?",id:"how-to-set-gradient_accumulation_steps-and-per_device_train_batch_size",level:3},{value:"For DeepSpeed Backend:",id:"for-deepspeed-backend",level:4},{value:"For Megatron Backend:",id:"for-megatron-backend",level:4},{value:"Debugging and Performance Analysis Related",id:"debugging-and-performance-analysis-related",level:2},{value:"How to get the training timeline?",id:"how-to-get-the-training-timeline",level:3},{value:"How to debug code?",id:"how-to-debug-code",level:3},{value:"Common Errors and Solutions",id:"common-errors-and-solutions",level:2},{value:"Error: <code>self.node2pg[node_rank] KeyError: 1</code>",id:"error-selfnode2pgnode_rank-keyerror-1",level:3},{value:"Error: <code>assert self.lr_decay_steps &gt; 0</code>",id:"error-assert-selflr_decay_steps--0",level:3},{value:"Error: <code>AssertionError: batch_size 32 &lt; chunks 64</code>",id:"error-assertionerror-batch_size-32--chunks-64",level:3},{value:"Error: <code>TypeError: BackendCompilerFailed.__init__() missing 1 required positional argument</code>",id:"error-typeerror-backendcompilerfailed__init__-missing-1-required-positional-argument",level:3}],c={toc:d},p="wrapper";function u({components:e,...n}){return(0,a.yg)(p,(0,t.A)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"frequently-asked-questions-qa"},"Frequently Asked Questions (Q&A)"),(0,a.yg)("p",null,"This document compiles common issues that may be encountered when using the ROLL framework and their solutions."),(0,a.yg)("h2",{id:"model-conversion-related"},"Model Conversion Related"),(0,a.yg)("h3",{id:"how-to-convert-megatron-models-to-hf-format"},"How to convert Megatron models to HF format?"),(0,a.yg)("p",null,"Use the following command for format conversion:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"python mcore_adapter/tools/convert.py --checkpoint_path path_to_megatron_model --output_path path_to_output_hf_model\n")),(0,a.yg)("h2",{id:"resource-configuration-related"},"Resource Configuration Related"),(0,a.yg)("h3",{id:"what-is-colocate-mode"},"What is colocate mode?"),(0,a.yg)("p",null,"In colocate mode, multiple roles (such as ",(0,a.yg)("inlineCode",{parentName:"p"},"actor_train"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"actor_infer"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"reference"),") can reuse the same GPU devices in their ",(0,a.yg)("inlineCode",{parentName:"p"},"device_mapping"),". For example:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"actor_train:\n  device_mapping: list(range(0,8))\nactor_infer:\n  device_mapping: list(range(0,8))\nreference:\n  device_mapping: list(range(0,8))\n")),(0,a.yg)("p",null,"The framework's underlying resource management mechanism ensures GPU reuse between multiple roles, improving resource utilization."),(0,a.yg)("h3",{id:"what-is-separate-mode"},"What is separate mode?"),(0,a.yg)("p",null,"In separate mode, there is no intersection between different roles' ",(0,a.yg)("inlineCode",{parentName:"p"},"device_mapping"),", and each role holds a set of independent GPU device resources. For example:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"actor_train:\n  device_mapping: list(range(0,8))\nactor_infer:\n  device_mapping: list(range(8,16))\nreference:\n  device_mapping: list(range(16,24))\n")),(0,a.yg)("p",null,"This approach can avoid resource competition between roles and improve system stability."),(0,a.yg)("h2",{id:"training-parameters-related"},"Training Parameters Related"),(0,a.yg)("h3",{id:"what-do-rollout_batch_size-and-num_return_sequences_in_group-mean"},"What do ",(0,a.yg)("inlineCode",{parentName:"h3"},"rollout_batch_size")," and ",(0,a.yg)("inlineCode",{parentName:"h3"},"num_return_sequences_in_group")," mean?"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"rollout_batch_size"),": The number of prompts in a batch"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"num_return_sequences_in_group"),": The sampling count for each prompt, i.e., the n parameter in vLLM/SGLang inference")),(0,a.yg)("p",null,"Actual number of samples in a batch = ",(0,a.yg)("inlineCode",{parentName:"p"},"rollout_batch_size")," * ",(0,a.yg)("inlineCode",{parentName:"p"},"num_return_sequences_in_group")),(0,a.yg)("p",null,"For Megatron Backend, note:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"rollout_batch_size * num_return_sequences_in_group must be an integer multiple of:\ngradient_accumulation_steps * per_device_train_batch_size * (world_size/tensor_model_parallel_size/pipeline_model_parallel_size/context_parallel_size)\n")),(0,a.yg)("h3",{id:"how-to-set-gradient_accumulation_steps-and-per_device_train_batch_size"},"How to set ",(0,a.yg)("inlineCode",{parentName:"h3"},"gradient_accumulation_steps")," and ",(0,a.yg)("inlineCode",{parentName:"h3"},"per_device_train_batch_size"),"?"),(0,a.yg)("h4",{id:"for-deepspeed-backend"},"For DeepSpeed Backend:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"global_batch_size = per_device_train_batch_size * gradient_accumulation_steps * world_size\n")),(0,a.yg)("p",null,"Where ",(0,a.yg)("inlineCode",{parentName:"p"},"world_size")," is the length of ",(0,a.yg)("inlineCode",{parentName:"p"},"device_mapping")," for ",(0,a.yg)("inlineCode",{parentName:"p"},"actor_train"),"/",(0,a.yg)("inlineCode",{parentName:"p"},"critic")),(0,a.yg)("h4",{id:"for-megatron-backend"},"For Megatron Backend:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"global_batch_size = per_device_train_batch_size * gradient_accumulation_steps * world_size / \n                    tensor_model_parallel_size / pipeline_model_parallel_size / context_parallel_size\n")),(0,a.yg)("p",null,"Where ",(0,a.yg)("inlineCode",{parentName:"p"},"world_size")," is the length of ",(0,a.yg)("inlineCode",{parentName:"p"},"device_mapping")," for ",(0,a.yg)("inlineCode",{parentName:"p"},"actor_train"),"/",(0,a.yg)("inlineCode",{parentName:"p"},"critic")),(0,a.yg)("p",null,"Note: No need to divide by ",(0,a.yg)("inlineCode",{parentName:"p"},"expert_model_parallel_size")),(0,a.yg)("h2",{id:"debugging-and-performance-analysis-related"},"Debugging and Performance Analysis Related"),(0,a.yg)("h3",{id:"how-to-get-the-training-timeline"},"How to get the training timeline?"),(0,a.yg)("p",null,"You can try enabling profiling in YAML:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},'system_envs:\n  RAY_PROFILING: "1"\nprofiler_output_dir: /data/oss_bucket_0/yali/llm/profile/${exp_name}\n')),(0,a.yg)("p",null,"Then use the ",(0,a.yg)("a",{parentName:"p",href:"https://ui.perfetto.dev/"},"Perfetto UI")," tool for analysis."),(0,a.yg)("h3",{id:"how-to-debug-code"},"How to debug code?"),(0,a.yg)("p",null,"Set ",(0,a.yg)("inlineCode",{parentName:"p"},'"RAY_DEBUG": "legacy"')," in Platform' env, and then you can use pdb for step-by-step debugging."),(0,a.yg)("h2",{id:"common-errors-and-solutions"},"Common Errors and Solutions"),(0,a.yg)("h3",{id:"error-selfnode2pgnode_rank-keyerror-1"},"Error: ",(0,a.yg)("inlineCode",{parentName:"h3"},"self.node2pg[node_rank] KeyError: 1")),(0,a.yg)("p",null,"Check the total number of GPUs requested and the ",(0,a.yg)("inlineCode",{parentName:"p"},"device_mapping")," configuration. This error generally occurs because ",(0,a.yg)("inlineCode",{parentName:"p"},"max(device_mapping)")," is less than or greater than ",(0,a.yg)("inlineCode",{parentName:"p"},"total_gpu_nums"),"."),(0,a.yg)("h3",{id:"error-assert-selflr_decay_steps--0"},"Error: ",(0,a.yg)("inlineCode",{parentName:"h3"},"assert self.lr_decay_steps > 0")),(0,a.yg)("p",null,"When ROLL distributes data, it will distribute ",(0,a.yg)("inlineCode",{parentName:"p"},"rollout_batch_size")," samples to each ",(0,a.yg)("inlineCode",{parentName:"p"},"actor_train")," worker according to DP size, and then calculate the samples for each gradient update according to ",(0,a.yg)("inlineCode",{parentName:"p"},"gradient_accumulation_steps"),". The configuration results in 0 when divided."),(0,a.yg)("p",null,"For detailed configuration logic, refer to the manual: ",(0,a.yg)("a",{parentName:"p",href:"https://alibaba.github.io/ROLL/docs/English/QuickStart/config_guide#training-arguments-training_args"},"Training Arguments")),(0,a.yg)("h3",{id:"error-assertionerror-batch_size-32--chunks-64"},"Error: ",(0,a.yg)("inlineCode",{parentName:"h3"},"AssertionError: batch_size 32 < chunks 64")),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"batch_size")," is less than the DP size of ",(0,a.yg)("inlineCode",{parentName:"p"},"reference"),"/",(0,a.yg)("inlineCode",{parentName:"p"},"actor_train"),", causing insufficient data for splitting during dispatch. This can be resolved by adjusting ",(0,a.yg)("inlineCode",{parentName:"p"},"rollout_batch_size"),"."),(0,a.yg)("h3",{id:"error-typeerror-backendcompilerfailed__init__-missing-1-required-positional-argument"},"Error: ",(0,a.yg)("inlineCode",{parentName:"h3"},"TypeError: BackendCompilerFailed.__init__() missing 1 required positional argument")),(0,a.yg)("p",null,"You can try adding a configuration item in YAML to resolve this:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"system_envs:\n  NVTE_TORCH_COMPILE: '0'\n")))}u.isMDXComponent=!0}}]);