defaults:
  - ../config/vl_traj_envs@_here_
  - ../config/deepspeed_zero@_here_
  - ../config/deepspeed_zero2@_here_
  - ../config/deepspeed_zero3@_here_
  - ../config/deepspeed_zero3_cpuoffload@_here_

hydra:
  run:
    dir: .
  output_subdir: null

exp_name: "agentic_pipeline"
seed: 42
logging_dir: ./output/logs
output_dir: ./output
render_save_dir: ./output/render
system_envs:
  USE_MODELSCOPE: '1'

track_with: wandb
tracker_kwargs:
 api_key: ${oc.env:WANDB_API_KEY}  # Read from environment variable
 project: fleet-train
 name: ${exp_name}_click_and_read
 notes: "agentic_pipeline"
 tags:
   - agentic
   - roll
   - baseline

# track_with: tensorboard
# tracker_kwargs:
#   log_dir: /data/oss_bucket_0/yali/llm/tensorboard/roll_exp/agentic_click_and_read

checkpoint_config:
  type: file_system
  output_dir: /data/cpfs_0/rl_examples/models/${exp_name}

num_gpus_per_node: 8

max_steps: 1024
save_steps: 10000
logging_steps: 1
eval_steps: 10
resume_from_checkpoint: false

rollout_batch_size: 512
val_batch_size: 512
sequence_length: 8192

advantage_clip: 0.2
ppo_epochs: 1
adv_estimator: "grpo"
#pg_clip: 0.1
#dual_clip_loss: True
init_kl_coef: 0.0
whiten_advantages: true
entropy_loss_coef: 0
max_grad_norm: 1.0

pretrain: Qwen/Qwen2.5-VL-3B-Instruct
reward_pretrain: Qwen/Qwen2.5-VL-3B-Instruct

actor_train:
  model_args:
    attn_implementation: fa2
    disable_gradient_checkpointing: false
    dtype: bf16
    model_type: ~
  training_args:
    learning_rate: 1.0e-6
    weight_decay: 0
    per_device_train_batch_size: 2
    gradient_accumulation_steps: 16
    warmup_steps: 10
    lr_scheduler_type: cosine
  data_args:
    template: qwen2_5
  strategy_args:
    strategy_name: deepspeed_train
    strategy_config: ${deepspeed_zero3}
#    strategy_name: megatron_train
#    strategy_config:
#      tensor_model_parallel_size: 2
#      pipeline_model_parallel_size: 1
#      expert_model_parallel_size: 1
#      use_distributed_optimizer: true
#      recompute_granularity: full
  device_mapping: list(range(0,8))
  infer_batch_size: 2

actor_infer:
  model_args:
    disable_gradient_checkpointing: true
    dtype: bf16
  generating_args:
    max_new_tokens: 128 # single-turn response length
    top_p: 0.99
    top_k: 100
    num_beams: 1
    temperature: 0.99
    num_return_sequences: 1
  data_args:
    template: qwen2_5
  strategy_args:
    strategy_name: vllm
    strategy_config:
      gpu_memory_utilization: 0.5
      block_size: 16
      load_format: auto
      limit_mm_per_prompt:
        image: ${max_actions_per_traj}
  device_mapping: list(range(0,8))

reference:
  model_args:
    attn_implementation: fa2
    disable_gradient_checkpointing: true
    dtype: bf16
    model_type: ~
  data_args:
    template: qwen2_5
  strategy_args:
    strategy_name: hf_infer
    strategy_config: ~
  device_mapping: list(range(0,8))
  infer_batch_size: 2

reward_normalization:
  grouping: traj_group_id # 可以tags(env_type)/traj_group_id(group)/batch(rollout_batch)... group_by计算reward/adv
  method: mean_std # asym_clip / identity / mean_std

train_env_manager:
  format_penalty: -0.01
  max_env_num_per_worker: 8
  num_env_groups: 64
  # under the same group, the env config and env seed are ensured to be equal
  group_size: 8
  tags: [ClickAndRead]
  num_groups_partition: [64] # If not set, all env names divide nums equally. Under the same group, the env config and env seed (prompt) are equal in each generation

val_env_manager:
  max_env_num_per_worker: 16
  num_env_groups: 512
  group_size: 1 # should be set to 1 because val temperature is set to 0 and same prompt leads to same output
  tags: [ClickAndRead]
  num_groups_partition: [512] # TODO: If not set, all env names divide nums equally. Under the same group, the env config and env seed (prompt) are equal in each generation

# Here, you can override variables defined in the imported envs
max_tokens_per_step: 64
max_actions_per_traj: 5

custom_envs:
  ClickAndRead:
    ${custom_env.ClickAndRead}

